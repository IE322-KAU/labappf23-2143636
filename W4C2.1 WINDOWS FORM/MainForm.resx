<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>